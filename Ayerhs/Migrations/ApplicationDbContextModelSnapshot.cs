// <auto-generated />
using System;
using Ayerhs.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ayerhs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.ClientRoles", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("ClientId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblclient_roles", (string)null);
                });

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttemptCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AutoDeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("ClientMobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ClientPassword")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("ClientUsername")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeletedState")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LockedUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("tblclients", (string)null);
                });

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.Roles", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("tblroles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Super Admin -> Role Full control over the system.",
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Admin Role -> Manage users, roles, and some system settings.",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Description = "User Role -> Can access and modify their own data.",
                            Name = "User"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Viewer Role -> Limited access to view specific data.",
                            Name = "Viewer"
                        });
                });

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.ClientRoles", b =>
                {
                    b.HasOne("Ayerhs.Core.Entities.AccountManagement.Clients", "Client")
                        .WithMany("ClientRoles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ayerhs.Core.Entities.AccountManagement.Roles", "Role")
                        .WithMany("ClientRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.Clients", b =>
                {
                    b.Navigation("ClientRoles");
                });

            modelBuilder.Entity("Ayerhs.Core.Entities.AccountManagement.Roles", b =>
                {
                    b.Navigation("ClientRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
